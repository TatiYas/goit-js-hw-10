{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\nconst datetimePicker = document.querySelector('#datetime-picker');\n\nstartBtn.disabled = true;\nlet selectedDate;\nconst currentDate = new Date();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n\n    if (selectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  const interval = setInterval(() => {\n    const currentDate = new Date();\n\n    const msDiff = selectedDate - currentDate;\n    if (msDiff <= 0) {\n      clearInterval(interval);\n      startBtn.disabled = false;\n\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(msDiff);\n\n    daysElement.textContent = addLeadingZero(days);\n    hoursElement.textContent = addLeadingZero(hours);\n    minutesElement.textContent = addLeadingZero(minutes);\n    secondsElement.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\nfunction addLeadingZero(element) {\n  if (element < 10) {\n    return '0' + element;\n  } else {\n    return element;\n  }}"],"names":["startBtn","daysElement","hoursElement","minutesElement","secondsElement","datetimePicker","selectedDate","currentDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","interval","msDiff","addLeadingZero","element"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,kBAAkB,EAEhEL,EAAS,SAAW,GACpB,IAAIM,EACJ,MAAMC,EAAc,IAAI,KAElBC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAeG,EAAc,CAAC,EAE1BH,EAAeC,GACjBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDV,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAW,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAjB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBK,EAAe,SAAW,GAE1B,MAAMa,EAAW,YAAY,IAAM,CAGjC,MAAMC,EAASb,EAFK,IAAI,KAGxB,GAAIa,GAAU,EAAG,CACf,cAAcD,CAAQ,EACtBlB,EAAS,SAAW,GAEpB,MACD,CACD,KAAM,CAAE,KAAAc,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAM,EAE1DlB,EAAY,YAAcmB,EAAeN,CAAI,EAC7CZ,EAAa,YAAckB,EAAeL,CAAK,EAC/CZ,EAAe,YAAciB,EAAeJ,CAAO,EACnDZ,EAAe,YAAcgB,EAAeH,CAAO,CACpD,EAAE,GAAI,CACT,CAAC,EAED,SAASG,EAAeC,EAAS,CAC/B,OAAIA,EAAU,GACL,IAAMA,EAENA,CACR"}